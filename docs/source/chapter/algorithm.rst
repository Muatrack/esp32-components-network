算法
+++++++++

序列化&反序列化
----------------

    全组件中，涉及序列化与反序列化的地方，须遵守以下约定
        #. 整数的低字节存储到字节数组的低地址，整数的低字节存储到字节数组的高地址。

        序列化举例 
            * 整数序列化

                .. code::
                    
                    // 字节序列
                    uint8_t  bytes[4] = {0};
                    // 整数
                    uint32_t num = 0x01020304;

                    // 序列化过程
                    bytes[0] = num & 0xFF;
                    bytes[1] = (num >> 8) & 0xFF;
                    bytes[2] = (num >> 16) & 0xFF;
                    bytes[3] = (num >> 24) & 0xFF;

            * 整数反序列化

                .. code::
                    
                    // 字节序列
                    uint8_t  bytes[4] = { 0x01, 0x02, 0x03, 0x04 };
                    // 整数
                    uint32_t num = 0;

                    // 反序列化过程
                    num = bytes[0] | (bytes[1] << 8) | (bytes[2] << 16) | (bytes[3] << 24);
                    
